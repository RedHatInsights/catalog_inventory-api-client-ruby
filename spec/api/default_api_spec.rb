=begin
#Catalog Inventory

#Catalog Inventory

The version of the OpenAPI document: 3.0.0
Contact: support@redhat.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.2.2

=end

require 'spec_helper'
require 'json'

# Unit tests for CatalogInventoryApiClient::DefaultApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @api_instance = CatalogInventoryApiClient::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instance of DefaultApi' do
      expect(@api_instance).to be_instance_of(CatalogInventoryApiClient::DefaultApi)
    end
  end

  # unit tests for applied_inventories_for_service_offering
  # Invokes computing of ServiceInventories for given ServiceOffering
  # Returns a Task id
  # @param id ID of the resource
  # @param applied_inventories_parameters_service_plan Parameters defining input data for computing inventories
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse200]
  describe 'applied_inventories_for_service_offering test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_documentation
  # Return this API document in JSON format
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'get_documentation test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_credential_types
  # List ServiceCredentialTypes
  # Returns an array of ServiceCredentialType objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceCredentialTypesCollection]
  describe 'list_service_credential_types test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_credentials
  # List ServiceCredentials
  # Returns an array of ServiceCredential objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceCredentialsCollection]
  describe 'list_service_credentials test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_instance_node_service_credentials
  # List ServiceCredentials for ServiceInstanceNode
  # Returns an array of ServiceCredential objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceCredentialsCollection]
  describe 'list_service_instance_node_service_credentials test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_instance_nodes
  # List ServiceInstanceNodes
  # Returns an array of ServiceInstanceNode objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceInstanceNodesCollection]
  describe 'list_service_instance_nodes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_instance_service_credentials
  # List ServiceCredentials for ServiceInstance
  # Returns an array of ServiceCredential objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceCredentialsCollection]
  describe 'list_service_instance_service_credentials test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_instance_service_instance_nodes
  # List ServiceInstanceNodes for ServiceInstance
  # Returns an array of ServiceInstanceNode objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceInstanceNodesCollection]
  describe 'list_service_instance_service_instance_nodes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_instances
  # List ServiceInstances
  # Returns an array of ServiceInstance objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceInstancesCollection]
  describe 'list_service_instances test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_inventories
  # List ServiceInventories
  # Returns an array of ServiceInventory objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceInventoriesCollection]
  describe 'list_service_inventories test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_inventory_tags
  # List Tags for ServiceInventory
  # Returns an array of Tag objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [TagsCollection]
  describe 'list_service_inventory_tags test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_offering_icons
  # List ServiceOfferingIcons
  # Returns an array of ServiceOfferingIcon objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceOfferingIconsCollection]
  describe 'list_service_offering_icons test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_offering_node_service_credentials
  # List ServiceCredentials for ServiceOfferingNode
  # Returns an array of ServiceCredential objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceCredentialsCollection]
  describe 'list_service_offering_node_service_credentials test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_offering_nodes
  # List ServiceOfferingNodes
  # Returns an array of ServiceOfferingNode objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceOfferingNodesCollection]
  describe 'list_service_offering_nodes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_offering_service_credentials
  # List ServiceCredentials for ServiceOffering
  # Returns an array of ServiceCredential objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceCredentialsCollection]
  describe 'list_service_offering_service_credentials test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_offering_service_instances
  # List ServiceInstances for ServiceOffering
  # Returns an array of ServiceInstance objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceInstancesCollection]
  describe 'list_service_offering_service_instances test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_offering_service_offering_nodes
  # List ServiceOfferingNodes for ServiceOffering
  # Returns an array of ServiceOfferingNode objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceOfferingNodesCollection]
  describe 'list_service_offering_service_offering_nodes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_offering_service_plans
  # List ServicePlans for ServiceOffering
  # Returns an array of ServicePlan objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServicePlansCollection]
  describe 'list_service_offering_service_plans test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_offering_tags
  # List Tags for ServiceOffering
  # Returns an array of Tag objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [TagsCollection]
  describe 'list_service_offering_tags test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_offerings
  # List ServiceOfferings
  # Returns an array of ServiceOffering objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceOfferingsCollection]
  describe 'list_service_offerings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_plan_service_instances
  # List ServiceInstances for ServicePlan
  # Returns an array of ServiceInstance objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceInstancesCollection]
  describe 'list_service_plan_service_instances test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_plans
  # List ServicePlans
  # Returns an array of ServicePlan objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServicePlansCollection]
  describe 'list_service_plans test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_service_instance_nodes
  # List ServiceInstanceNodes for Source
  # Returns an array of ServiceInstanceNode objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceInstanceNodesCollection]
  describe 'list_source_service_instance_nodes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_service_instances
  # List ServiceInstances for Source
  # Returns an array of ServiceInstance objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceInstancesCollection]
  describe 'list_source_service_instances test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_service_inventories
  # List ServiceInventories for Source
  # Returns an array of ServiceInventory objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceInventoriesCollection]
  describe 'list_source_service_inventories test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_service_offering_nodes
  # List ServiceOfferingNodes for Source
  # Returns an array of ServiceOfferingNode objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceOfferingNodesCollection]
  describe 'list_source_service_offering_nodes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_service_offerings
  # List ServiceOfferings for Source
  # Returns an array of ServiceOffering objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceOfferingsCollection]
  describe 'list_source_service_offerings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_service_plans
  # List ServicePlans for Source
  # Returns an array of ServicePlan objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServicePlansCollection]
  describe 'list_source_service_plans test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_sources
  # List Sources
  # Returns an array of Source objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [SourcesCollection]
  describe 'list_sources test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tag_service_inventories
  # List ServiceInventories for Tag
  # Returns an array of ServiceInventory objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceInventoriesCollection]
  describe 'list_tag_service_inventories test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tag_service_offerings
  # List ServiceOfferings for Tag
  # Returns an array of ServiceOffering objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceOfferingsCollection]
  describe 'list_tag_service_offerings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tags
  # List Tags
  # Returns an array of Tag objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [TagsCollection]
  describe 'list_tags test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tasks
  # List Tasks
  # Returns an array of Task objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [Object] :sort_by The list of attribute and order to sort the result set by.
  # @return [TasksCollection]
  describe 'list_tasks test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for order_service_offering
  # Order an existing ServiceOffering
  # Returns a Task id
  # @param id ID of the resource
  # @param order_parameters_service_offering Order parameters defining the service and provider control
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse200]
  describe 'order_service_offering test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for order_service_plan
  # Order an existing ServicePlan
  # Returns a Task id
  # @param id ID of the resource
  # @param order_parameters_service_plan Order parameters defining the service and provider control
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse200]
  describe 'order_service_plan test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_graph_ql
  # Perform a GraphQL Query
  # Performs a GraphQL Query
  # @param graph_ql_request GraphQL Query Request
  # @param [Hash] opts the optional parameters
  # @return [GraphQLResponse]
  describe 'post_graph_ql test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_service_credential
  # Show an existing ServiceCredential
  # Returns a ServiceCredential object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [ServiceCredential]
  describe 'show_service_credential test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_service_credential_type
  # Show an existing ServiceCredentialType
  # Returns a ServiceCredentialType object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [ServiceCredentialType]
  describe 'show_service_credential_type test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_service_instance
  # Show an existing ServiceInstance
  # Returns a ServiceInstance object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [ServiceInstance]
  describe 'show_service_instance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_service_instance_node
  # Show an existing ServiceInstanceNode
  # Returns a ServiceInstanceNode object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [ServiceInstanceNode]
  describe 'show_service_instance_node test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_service_inventory
  # Show an existing ServiceInventory
  # Returns a ServiceInventory object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [ServiceInventory]
  describe 'show_service_inventory test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_service_offering
  # Show an existing ServiceOffering
  # Returns a ServiceOffering object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [ServiceOffering]
  describe 'show_service_offering test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_service_offering_icon
  # Show an existing ServiceOfferingIcon
  # Returns a ServiceOfferingIcon object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [ServiceOfferingIcon]
  describe 'show_service_offering_icon test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_service_offering_icon_icon_data
  # Show an existing ServiceOfferingIcon IconData
  # Returns a ServiceOfferingIcon IconData
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'show_service_offering_icon_icon_data test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_service_offering_node
  # Show an existing ServiceOfferingNode
  # Returns a ServiceOfferingNode object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [ServiceOfferingNode]
  describe 'show_service_offering_node test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_service_plan
  # Show an existing ServicePlan
  # Returns a ServicePlan object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [ServicePlan]
  describe 'show_service_plan test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_source
  # Show an existing Source
  # Returns a Source object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [Source]
  describe 'show_source test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_tag
  # Show an existing Tag
  # Returns a Tag object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [Tag]
  describe 'show_tag test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_task
  # Show an existing Task
  # Returns a Task object
  # @param id UUID of task
  # @param [Hash] opts the optional parameters
  # @return [Task]
  describe 'show_task test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tag_service_inventory
  # Tag a ServiceInventory
  # Tags a ServiceInventory object
  # @param id ID of the resource
  # @param tag Tag attributes to add
  # @param [Hash] opts the optional parameters
  # @return [Array<Tag>]
  describe 'tag_service_inventory test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tag_service_offering
  # Tag a ServiceOffering
  # Tags a ServiceOffering object
  # @param id ID of the resource
  # @param tag Tag attributes to add
  # @param [Hash] opts the optional parameters
  # @return [Array<Tag>]
  describe 'tag_service_offering test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for untag_service_inventory
  # Untag a ServiceInventory
  # Untags a ServiceInventory object
  # @param id ID of the resource
  # @param tag Tag attributes to removed
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'untag_service_inventory test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for untag_service_offering
  # Untag a ServiceOffering
  # Untags a ServiceOffering object
  # @param id ID of the resource
  # @param tag Tag attributes to removed
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'untag_service_offering test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_task
  # Update an existing Task
  # Updates a Task object
  # @param id UUID of task
  # @param task Task attributes to update
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_task test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
